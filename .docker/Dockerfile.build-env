# Multi-stage build environment for Better GIMP
FROM ubuntu:22.04 as build-base

# Avoid interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=UTC

# Install base build tools and dependencies
RUN apt-get update && apt-get install -y \
    # Build essentials
    build-essential \
    cmake \
    ninja-build \
    pkg-config \
    git \
    curl \
    wget \
    unzip \
    # C++ dependencies
    libtbb-dev \
    libeigen3-dev \
    libopencv-dev \
    libopencv-contrib-dev \
    # GUI dependencies
    libgtk-3-dev \
    libx11-dev \
    libxrandr-dev \
    libxinerama-dev \
    libxcursor-dev \
    libxi-dev \
    libgl1-mesa-dev \
    libasound2-dev \
    # Python
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    # Node.js
    curl \
    && curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    # Cleanup
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install vcpkg
ENV VCPKG_ROOT=/opt/vcpkg
RUN git clone https://github.com/Microsoft/vcpkg.git $VCPKG_ROOT \
    && cd $VCPKG_ROOT \
    && git checkout 2024.07.12 \
    && ./bootstrap-vcpkg.sh \
    && ./vcpkg integrate install

# Install Python build tools
RUN python3 -m pip install --upgrade pip setuptools wheel build

# Set working directory
WORKDIR /workspace

# Development environment
FROM build-base as dev-env

# Install additional development tools
RUN apt-get update && apt-get install -y \
    gdb \
    valgrind \
    clang-format \
    clang-tidy \
    cppcheck \
    doxygen \
    graphviz \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Production build environment
FROM build-base as prod-env

# Copy source code
COPY . /workspace/

# Build the project
RUN cd core-cpp \
    && cmake --preset linux-release \
        -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake \
        -DVCPKG_TARGET_TRIPLET=x64-linux \
    && cmake --build --preset linux-release \
    && cmake --build --preset linux-release --target package

# Runtime image
FROM ubuntu:22.04 as runtime

ENV DEBIAN_FRONTEND=noninteractive

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    libtbb12 \
    libopencv-core4.5d \
    libopencv-imgproc4.5d \
    libopencv-imgcodecs4.5d \
    libgtk-3-0 \
    libx11-6 \
    python3 \
    python3-pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Copy built artifacts
COPY --from=prod-env /workspace/core-cpp/build/linux-release/Release/ /opt/bettergimp/
COPY --from=prod-env /workspace/backend-python/dist/ /opt/bettergimp/backend/
COPY --from=prod-env /workspace/frontend-electron/dist/ /opt/bettergimp/frontend/

# Create startup script
RUN echo '#!/bin/bash\n\
cd /opt/bettergimp\n\
python3 -m backend.main &\n\
./frontend/bettergimp\n\
' > /usr/local/bin/bettergimp && chmod +x /usr/local/bin/bettergimp

EXPOSE 8000

CMD ["bettergimp"]
